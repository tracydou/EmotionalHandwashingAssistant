// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracker_message.proto

#ifndef PROTOBUF_tracker_5fmessage_2eproto__INCLUDED
#define PROTOBUF_tracker_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tracker_5fmessage_2eproto();
void protobuf_AssignDesc_tracker_5fmessage_2eproto();
void protobuf_ShutdownFile_tracker_5fmessage_2eproto();

class HandTrackerRequest;
class HandTrackerResponseHandPos;
class HandTrackerResponseAction;

enum HandTrackerRequest_RequestType {
  HandTrackerRequest_RequestType_LEFT_HAND_POS = 0,
  HandTrackerRequest_RequestType_RIGHT_HAND_POS = 1,
  HandTrackerRequest_RequestType_ACTION = 2
};
bool HandTrackerRequest_RequestType_IsValid(int value);
const HandTrackerRequest_RequestType HandTrackerRequest_RequestType_RequestType_MIN = HandTrackerRequest_RequestType_LEFT_HAND_POS;
const HandTrackerRequest_RequestType HandTrackerRequest_RequestType_RequestType_MAX = HandTrackerRequest_RequestType_ACTION;
const int HandTrackerRequest_RequestType_RequestType_ARRAYSIZE = HandTrackerRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HandTrackerRequest_RequestType_descriptor();
inline const ::std::string& HandTrackerRequest_RequestType_Name(HandTrackerRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HandTrackerRequest_RequestType_descriptor(), value);
}
inline bool HandTrackerRequest_RequestType_Parse(
    const ::std::string& name, HandTrackerRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HandTrackerRequest_RequestType>(
    HandTrackerRequest_RequestType_descriptor(), name, value);
}
// ===================================================================

class HandTrackerRequest : public ::google::protobuf::Message {
 public:
  HandTrackerRequest();
  virtual ~HandTrackerRequest();

  HandTrackerRequest(const HandTrackerRequest& from);

  inline HandTrackerRequest& operator=(const HandTrackerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandTrackerRequest& default_instance();

  void Swap(HandTrackerRequest* other);

  // implements Message ----------------------------------------------

  HandTrackerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandTrackerRequest& from);
  void MergeFrom(const HandTrackerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HandTrackerRequest_RequestType RequestType;
  static const RequestType LEFT_HAND_POS = HandTrackerRequest_RequestType_LEFT_HAND_POS;
  static const RequestType RIGHT_HAND_POS = HandTrackerRequest_RequestType_RIGHT_HAND_POS;
  static const RequestType ACTION = HandTrackerRequest_RequestType_ACTION;
  static inline bool RequestType_IsValid(int value) {
    return HandTrackerRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    HandTrackerRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    HandTrackerRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    HandTrackerRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return HandTrackerRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return HandTrackerRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return HandTrackerRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .HandTrackerRequest.RequestType request_type = 1 [default = LEFT_HAND_POS];
  inline bool has_request_type() const;
  inline void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  inline ::HandTrackerRequest_RequestType request_type() const;
  inline void set_request_type(::HandTrackerRequest_RequestType value);

  // @@protoc_insertion_point(class_scope:HandTrackerRequest)
 private:
  inline void set_has_request_type();
  inline void clear_has_request_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int request_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tracker_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tracker_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tracker_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static HandTrackerRequest* default_instance_;
};
// -------------------------------------------------------------------

class HandTrackerResponseHandPos : public ::google::protobuf::Message {
 public:
  HandTrackerResponseHandPos();
  virtual ~HandTrackerResponseHandPos();

  HandTrackerResponseHandPos(const HandTrackerResponseHandPos& from);

  inline HandTrackerResponseHandPos& operator=(const HandTrackerResponseHandPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandTrackerResponseHandPos& default_instance();

  void Swap(HandTrackerResponseHandPos* other);

  // implements Message ----------------------------------------------

  HandTrackerResponseHandPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandTrackerResponseHandPos& from);
  void MergeFrom(const HandTrackerResponseHandPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1 [default = 0];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2 [default = 0];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required float z = 3 [default = 0];
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:HandTrackerResponseHandPos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tracker_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tracker_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tracker_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static HandTrackerResponseHandPos* default_instance_;
};
// -------------------------------------------------------------------

class HandTrackerResponseAction : public ::google::protobuf::Message {
 public:
  HandTrackerResponseAction();
  virtual ~HandTrackerResponseAction();

  HandTrackerResponseAction(const HandTrackerResponseAction& from);

  inline HandTrackerResponseAction& operator=(const HandTrackerResponseAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandTrackerResponseAction& default_instance();

  void Swap(HandTrackerResponseAction* other);

  // implements Message ----------------------------------------------

  HandTrackerResponseAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandTrackerResponseAction& from);
  void MergeFrom(const HandTrackerResponseAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 action = 1 [default = 0];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HandTrackerResponseAction)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tracker_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tracker_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tracker_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static HandTrackerResponseAction* default_instance_;
};
// ===================================================================


// ===================================================================

// HandTrackerRequest

// required .HandTrackerRequest.RequestType request_type = 1 [default = LEFT_HAND_POS];
inline bool HandTrackerRequest::has_request_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandTrackerRequest::set_has_request_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandTrackerRequest::clear_has_request_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandTrackerRequest::clear_request_type() {
  request_type_ = 0;
  clear_has_request_type();
}
inline ::HandTrackerRequest_RequestType HandTrackerRequest::request_type() const {
  return static_cast< ::HandTrackerRequest_RequestType >(request_type_);
}
inline void HandTrackerRequest::set_request_type(::HandTrackerRequest_RequestType value) {
  assert(::HandTrackerRequest_RequestType_IsValid(value));
  set_has_request_type();
  request_type_ = value;
}

// -------------------------------------------------------------------

// HandTrackerResponseHandPos

// required float x = 1 [default = 0];
inline bool HandTrackerResponseHandPos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandTrackerResponseHandPos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandTrackerResponseHandPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandTrackerResponseHandPos::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float HandTrackerResponseHandPos::x() const {
  return x_;
}
inline void HandTrackerResponseHandPos::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2 [default = 0];
inline bool HandTrackerResponseHandPos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandTrackerResponseHandPos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandTrackerResponseHandPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandTrackerResponseHandPos::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float HandTrackerResponseHandPos::y() const {
  return y_;
}
inline void HandTrackerResponseHandPos::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3 [default = 0];
inline bool HandTrackerResponseHandPos::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandTrackerResponseHandPos::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandTrackerResponseHandPos::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandTrackerResponseHandPos::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float HandTrackerResponseHandPos::z() const {
  return z_;
}
inline void HandTrackerResponseHandPos::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// HandTrackerResponseAction

// required int32 action = 1 [default = 0];
inline bool HandTrackerResponseAction::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandTrackerResponseAction::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandTrackerResponseAction::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandTrackerResponseAction::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 HandTrackerResponseAction::action() const {
  return action_;
}
inline void HandTrackerResponseAction::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HandTrackerRequest_RequestType>() {
  return ::HandTrackerRequest_RequestType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tracker_5fmessage_2eproto__INCLUDED
